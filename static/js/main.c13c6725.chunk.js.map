{"version":3,"sources":["ApiQueries.js","pages/SportCalendar.js","pages/Main.js","components/Timer.js","pages/Workout.js","pages/Choose.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","UserId","a","axios","post","SberId","Name","Age","Gender","Active","newUser","data","get","params","users","user_id","category","groups","GroupId","group_id","exircises","date","Completed","Date","newProgress","progress","getAllGroupsExercises","getExircicesfromGroup","getUsersBySberId","getProgressByUser","createProgressAchieve","createUser","getProverkaUsersByUserId","withRouter","userId","useState","modifiers","selected","selectedDates","some","selectedDate","isSameDay","handleDayClick","setSelectedDates","ApiQueries","digit","setDigit","getData","uid","console","log","then","useEffect","recievedData","setRecievedData","res","createU","forEach","element","parse","style","height","onDayClick","locale","ru","setGroupId","ToChooseCateg","display","justifyContent","marginBottom","width","compact","content","right","marginTop","to","textDecoration","onClick","left","flexDirection","text","color","primary","size","accent","tertiary","format","time","minutes","Math","floor","seconds","padTime","customStyles","backgroundColor","background","backgroundImage","gradient","top","bottom","marginRight","transform","borderRadius","padding","Timer","subtitle","setIter","timeCount","iter","history","useHistory","React","modalIsOpen","setIsOpen","counter","setCounter","counterRest","setCounterRest","timer","setTimeout","c","clearTimeout","isOpen","onAfterOpen","ref","_subtitle","textAlign","push","String","length","options","year","month","day","timezone","groupId","workoutExercises","setWorkoutExercises","description","name","workOutStarted","setWorkOutStartet","iterChanged","fetchCategoriesAndSetCategories","workoutsEx","toLocaleString","map","i","_id","class","src","photo","lines","discription","view","scaleOnInteraction","outlined","fullWidth","disabled","tabIndex","setDescription","setName","setWorkouts","workouts","SendDataToAssistant","Row","short_discription","Col","type","scaleOnFocus","placeholder","AppStyled","styled","div","body1","TypoScale","createGlobalStyle","sberBox","ThemeBackgroundEva","darkEva","ThemeBackgroundSber","darkSber","ThemeBackgroundJoy","darkJoy","DocStyles","character","setCharacter","assistant","useRef","state","notes","setUserId","setIterChanged","ChangePage","page","ChooseTrain","train_name","charAt","toUpperCase","slice","trim","undefined","startTraining","changeExir","dispatchAssistantAction","action","id","getState","current","state_","item_selector","items","index","number","title","getStateForAssistant","createAssistant","on","event","sendData","action_id","parameters","basename","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c13c6725.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://mostrolleybus.ru:6536/\";\r\nasync function createSberId(SberId) {\r\n  const { data: newSberId } = await axios.post(`${API_URL}SberId`, {\r\n    SberId,\r\n  });\r\n  return newSberId;\r\n}\r\n\r\nasync function createUser(UserId) {\r\n  const { data: newUser } = await axios.post(`${API_URL}User`, {\r\n    UserId: UserId,\r\n    SberId: 0,\r\n    Name: \"\",\r\n    Age: 0,\r\n    Gender: \"\",\r\n    Active: 0,\r\n  });\r\n  return newUser;\r\n}\r\n\r\nasync function getUsersBySberId(SberId) {\r\n  const users = await axios.get(`${API_URL}User`, {\r\n    params: {\r\n      SberId: SberId,\r\n    },\r\n  });\r\n  return users;\r\n}\r\n\r\nasync function createCategoryExercises(CategoryName) {\r\n  const { data: newCategory } = await axios.post(`${API_URL}ExCateg`, {\r\n    CategoryName,\r\n  });\r\n  return newCategory;\r\n}\r\n\r\nasync function getAllCategoriesExirc() {\r\n  const categories = await axios.get(`${API_URL}ExCateg`);\r\n  return categories;\r\n}\r\nasync function getCategoryById(CategoryId) {\r\n  const category = await axios.get(`${API_URL}ExCateg`, {\r\n    params: {\r\n      Id: CategoryId,\r\n    },\r\n  });\r\n  return category;\r\n}\r\nasync function getProverkaUsersByUserId(UserId) {\r\n  const category = await axios.get(`${API_URL}ProverkaUsersByUserId`, {\r\n    params: {\r\n      user_id: UserId,\r\n    },\r\n  });\r\n  return category;\r\n}\r\nasync function getAllGroupsExercises() {\r\n  const groups = await axios.get(`${API_URL}AllGroupsExercises`);\r\n  return groups;\r\n}\r\nasync function getExircicesfromGroup(GroupId) {\r\n  const exircises = await axios.get(`${API_URL}ExircicesfromGroup`, {\r\n    params: {\r\n      group_id: GroupId,\r\n    },\r\n  });\r\n  return exircises;\r\n}\r\n\r\nasync function createProgressAchieve(UserId, date, Completed) {\r\n  const { data: newProgress } = axios.post(`${API_URL}ProgressAchieve`, {\r\n    UserId: UserId,\r\n    Date: date,\r\n    Completed: true,\r\n  });\r\n  return newProgress;\r\n}\r\n\r\nasync function getProgressByUser(UserId) {\r\n  const progress = axios.get(`${API_URL}ProgressByUser`, {\r\n    params: {\r\n      user_id: UserId,\r\n    },\r\n  });\r\n  return progress;\r\n}\r\n\r\nasync function getMotivationalPhrase() {\r\n  const Phrase = axios.get(`${API_URL}Phrase`);\r\n  return Phrase;\r\n}\r\n\r\nasync function updateQuestion(id, payload) {\r\n  const { data: newQuestion } = await axios.put(`${API_URL}${id}`, payload);\r\n  return newQuestion;\r\n}\r\nexport default {\r\n  API_URL,\r\n  getAllGroupsExercises,\r\n  getExircicesfromGroup,\r\n  getUsersBySberId,\r\n  getProgressByUser,\r\n  createProgressAchieve,\r\n  createUser,\r\n  getProverkaUsersByUserId,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Calendar } from \"react-nice-dates\";\r\nimport \"react-nice-dates/build/style.css\";\r\nimport { ru } from \"date-fns/locale\";\r\nimport { isSameDay } from \"date-fns\";\r\nimport { Button, Container, Spinner } from \"@sberdevices/ui\";\r\nimport ApiQueries from \"../ApiQueries\";\r\n\r\nimport \"./SportCalendar.css\";\r\nconst SportCalendar = ({ userId }) => {\r\n  const [date, setDate] = useState();\r\n\r\n  const modifiers = {\r\n    selected: (date) =>\r\n      selectedDates.some((selectedDate) => isSameDay(selectedDate, date)),\r\n  };\r\n  const handleDayClick = async (date) => {\r\n    //var date = new Date();\r\n\r\n    setSelectedDates([...selectedDates, date]);\r\n    await ApiQueries.createProgressAchieve(userId, date);\r\n  };\r\n  const [digit, setDigit] = useState(-1);\r\n  const getData = async (uid) => {\r\n    console.log(uid);\r\n    await ApiQueries.getProverkaUsersByUserId(uid).then((data) =>\r\n      setDigit(data.data)\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    getData(userId);\r\n    // const fetchDates = async (uid) => {\r\n    //   const res = await ApiQueries.getProverkaUsersByUserId(uid);\r\n    //   setDigit(res.data);\r\n    // };\r\n    // fetchDates(userId);\r\n  }, [digit]);\r\n  const [recievedData, setRecievedData] = useState([]);\r\n  useEffect(() => {\r\n    if (digit == 1) {\r\n      console.log(\"here\");\r\n      const progress = async (uid) => {\r\n        var res = await ApiQueries.getProgressByUser(uid);\r\n\r\n        // res.data.push({\r\n        //   date: \"Thu Feb 25 2021 04:26:51 GMT+0300 (Москва, стандартное время)\",\r\n        // });\r\n\r\n        // res.data.push({\r\n        //   date: \"Thu Feb 27 2021 04:26:51 GMT+0300 (Москва, стандартное время)\",\r\n        // });\r\n        // res.data.push({\r\n        //   date: \"Thu Feb 26 2021 04:26:51 GMT+0300 (Москва, стандартное время)\",\r\n        // });\r\n        console.log(res.data);\r\n        setRecievedData(res.data);\r\n\r\n        //console.log(res.data[0].date)\r\n      };\r\n      progress(userId);\r\n    } else if (digit == 0) {\r\n      console.log(\"here 2\");\r\n\r\n      const createU = async (uid) => {\r\n        var a = await ApiQueries.createUser(uid);\r\n      };\r\n      createU(userId);\r\n      getData(userId);\r\n    }\r\n  }, [digit]);\r\n  useEffect(() => {\r\n    recievedData.forEach((element) => {\r\n      console.log(element);\r\n      setSelectedDates([...selectedDates, Date.parse(element.date)]);\r\n      console.log(\"sel dates\", selectedDates);\r\n    });\r\n  }, [recievedData]);\r\n  const [selectedDates, setSelectedDates] = useState([]);\r\n\r\n  return (\r\n    <div style={{ height: \"50%\" }}>\r\n      <Container>\r\n        {digit == 1 ? (\r\n          <Calendar\r\n            onDayClick={handleDayClick}\r\n            modifiers={modifiers}\r\n            locale={ru}\r\n            date={date}\r\n          />\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SportCalendar);\r\n","import { Button, Container } from \"@sberdevices/ui\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport {\r\n  IconCalendar,\r\n  IconAccessibility,\r\n  IconDone,\r\n  IconApps,\r\n  IconCross,\r\n} from \"@sberdevices/plasma-icons\";\r\nimport { Headline3 } from \"@sberdevices/ui/components/Typography\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  TextBox,\r\n  TextBoxBiggerTitle,\r\n  TextBoxSubTitle,\r\n  Cell,\r\n  CellDisclosure,\r\n  CellIcon,\r\n  TextBoxTitle,\r\n  MarkedList,\r\n  MarkedItem,\r\n} from \"@sberdevices/ui\";\r\nimport { tertiary, primary, accent } from \"@sberdevices/plasma-tokens\";\r\nconst Main = ({ setGroupId, ToChooseCateg }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        marginBottom: \"2rem\",\r\n      }}\r\n    >\r\n      <Card style={{ width: \"20rem\" }}>\r\n        <CardContent compact>\r\n          <Cell\r\n            content={<TextBoxBiggerTitle>Начни день с</TextBoxBiggerTitle>}\r\n            right={<span style={{ marginTop: 5 }}></span>}\r\n          />\r\n          <Link\r\n            to=\"/fastworkout\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            <Cell\r\n              onClick={() => {\r\n                setGroupId(2);\r\n              }}\r\n              left={\r\n                <CellIcon>\r\n                  <IconAccessibility />\r\n                </CellIcon>\r\n              }\r\n              content={\r\n                <TextBox>\r\n                  <TextBoxTitle>Быстрая тренировка</TextBoxTitle>\r\n                  <TextBoxSubTitle>10 мин</TextBoxSubTitle>\r\n                </TextBox>\r\n              }\r\n              right={<CellDisclosure />}\r\n            />\r\n          </Link>\r\n          <Link to=\"/choose\" style={{ textDecoration: \"none\" }}>\r\n            <Cell\r\n              left={\r\n                <CellIcon>\r\n                  <IconApps />\r\n                </CellIcon>\r\n              }\r\n              onClick={() => ToChooseCateg()}\r\n              content={\r\n                <TextBox>\r\n                  <TextBoxTitle>Меню тренировок</TextBoxTitle>\r\n                  <TextBoxSubTitle>На любой вкус</TextBoxSubTitle>\r\n                </TextBox>\r\n              }\r\n              right={<CellDisclosure />}\r\n            />\r\n          </Link>\r\n\r\n          <Link\r\n            to=\"/calendar\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            <Cell\r\n              left={\r\n                <CellIcon>\r\n                  <IconCalendar />\r\n                </CellIcon>\r\n              }\r\n              content={\r\n                <TextBox>\r\n                  <TextBoxTitle>Календарь</TextBoxTitle>\r\n                  <TextBoxSubTitle>Ваш прогресс</TextBoxSubTitle>\r\n                </TextBox>\r\n              }\r\n              right={<CellDisclosure />}\r\n            />\r\n          </Link>\r\n        </CardContent>\r\n      </Card>\r\n      <div style={{ flexDirection: \"column\" }}>\r\n        <Headline3>Ваши достижения</Headline3>\r\n        <br />\r\n        <MarkedList>\r\n          <MarkedItem text=\"Первая тренировка\" style={{ color: primary }}>\r\n            <IconDone size=\"xs\" color={accent} />\r\n          </MarkedItem>\r\n          <MarkedItem\r\n            text=\"Занятия в течение 3х дней\"\r\n            style={{ color: primary }}\r\n          >\r\n            <IconDone size=\"xs\" color={accent} />\r\n          </MarkedItem>\r\n\r\n          <MarkedItem\r\n            text=\"Занятия в течение 10 дней\"\r\n            style={{ color: tertiary }}\r\n          >\r\n            <IconCross size=\"xs\" color={tertiary} />\r\n          </MarkedItem>\r\n        </MarkedList>\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Main);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"react-modal\";\nimport { text, background, gradient } from \"@sberdevices/plasma-tokens\";\nimport { Button } from \"@sberdevices/ui\";\nimport { IconHouse } from \"@sberdevices/plasma-icons\";\nimport \"./Modal.css\";\nimport { Headline2 } from \"@sberdevices/ui/components/Typography\";\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nconst format = (time) => {\n  // Convert seconds into minutes and take the whole part\n  const minutes = Math.floor(time / 60);\n\n  // Get the seconds left after converting minutes\n  const seconds = time % 60;\n\n  //Return combined values as string in format mm:ss\n  return `${minutes}:${padTime(seconds)}`;\n};\nconst customStyles = {\n  content: {\n    color: `${text}`,\n    backgroundColor: `${background}`,\n    backgroundImage: `${gradient}`,\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    borderRadius: \"1em\",\n    padding: \"1em\",\n  },\n};\n// const DocStyles = {`\n//     /* stylelint-disable-next-line selector-nested-pattern */\n//     html {\n\n//     }\n// `;\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nexport const Timer = ({ setIter, timeCount, iter }) => {\n  const history = useHistory();\n\n  var subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"\";\n    setCounterRest(30);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n  const [counter, setCounter] = React.useState(timeCount.timeCount);\n  const [counterRest, setCounterRest] = React.useState(30);\n  React.useEffect(() => {\n    console.log(\"Верхний юз\");\n\n    setCounter(timeCount.timeCount);\n  }, [timeCount]);\n  React.useEffect(() => {\n    console.log(timeCount);\n    // if(changed){\n\n    // }\n    // else{\n    //   setChanged()\n    // }\n    console.log(\"Timer useeffect\");\n\n    let timer;\n    if (counter > 0) {\n      timer = setTimeout(() => setCounter((c) => c - 1), 1000);\n    } else if (counter === 0) {\n      setIsOpen(true);\n    }\n    return () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n  }, [counter]);\n  React.useEffect(() => {\n    let timer;\n    if (counterRest > 0) {\n      timer = setTimeout(() => setCounterRest((c) => c - 1), 1000);\n    } else if (counter === 0) {\n      setIsOpen(false);\n      setIter(iter + 1);\n      setCounter(timeCount);\n    }\n    return () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n  }, [counterRest]);\n  return (\n    <div>\n      {counter !== 0 && <Headline2>Время: {format(counter)}</Headline2>}\n      <div>\n        <Modal\n          isOpen={modalIsOpen}\n          onAfterOpen={afterOpenModal}\n          //onRequestClose={closeModal}\n          style={customStyles}\n        >\n          <h2\n            ref={(_subtitle) => (subtitle = _subtitle)}\n            style={{ textAlign: \"center\" }}\n          >\n            Отдых\n          </h2>\n          <div style={{ textAlign: \"center\" }}>\n            <Headline2>Следующее упражнение через</Headline2>\n            <br />\n            {counterRest !== 0 && <Headline2>{format(counterRest)}</Headline2>}\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Button\n              onClick={() => {\n                setIsOpen(false);\n                setCounterRest(30);\n                history.push(\"/\");\n              }}\n            >\n              <IconHouse />\n            </Button>\n\n            <Button\n              onClick={() => {\n                setIsOpen(false);\n                setIter(iter + 1);\n                setCounter(timeCount);\n              }}\n            >\n              Продолжить\n            </Button>\n          </div>\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nconst padTime = (time) => {\n  return String(time).length === 1 ? `0${time}` : `${time}`;\n};\n","import { Button, Container, TextField } from \"@sberdevices/ui\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport ApiQueries from \"../ApiQueries\";\r\n\r\nimport { tertiary, primary, accent } from \"@sberdevices/plasma-tokens\";\r\nimport {\r\n  body1,\r\n  Display3,\r\n  Headline3,\r\n  Body1,\r\n  Body3,\r\n  Body2,\r\n} from \"@sberdevices/ui/components/Typography\";\r\nimport { Headline2 } from \"@sberdevices/ui/components/Typography\";\r\n\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport { IconDone, IconLock } from \"@sberdevices/plasma-icons\";\r\nimport { IconHouse } from \"@sberdevices/plasma-icons\";\r\n\r\nimport {\r\n  MarkedList,\r\n  MarkedItem,\r\n  Card,\r\n  CardBody,\r\n  CardMedia,\r\n  CardContent,\r\n  TextBoxBigTitle,\r\n  TextBoxBiggerTitle,\r\n  TextBox,\r\n  TextBoxSubTitle,\r\n  CardParagraph1,\r\n  CardHeadline1,\r\n  Spinner,\r\n} from \"@sberdevices/ui\";\r\nimport \"./Workout.css\";\r\nimport { Timer } from \"../components/Timer\";\r\nconst renderTime = ({ remainingTime }) => {\r\n  if (remainingTime === 0) {\r\n    return <div className=\"timer\">Стоп</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      {/* <div className=\"text\">Remaining</div> */}\r\n      <div className=\"value\">{remainingTime}</div>\r\n      {/* <div className=\"text\">seconds</div> */}\r\n    </div>\r\n  );\r\n};\r\nvar date = new Date();\r\nvar options = {\r\n  year: \"numeric\",\r\n  month: \"numeric\",\r\n  day: \"numeric\",\r\n  timezone: \"UTC\",\r\n};\r\n\r\nconst Workout = ({\r\n  groupId,\r\n  workoutExercises,\r\n  setWorkoutExercises,\r\n  description,\r\n  name,\r\n  userId,\r\n  workOutStarted,\r\n  setWorkOutStartet,\r\n\r\n  iterChanged,\r\n}) => {\r\n  const history = useHistory();\r\n  const [iter, setIter] = useState(0);\r\n\r\n  const fetchCategoriesAndSetCategories = async () => {\r\n    const workoutsEx = await ApiQueries.getExircicesfromGroup(groupId);\r\n    setWorkoutExercises(workoutsEx.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchCategoriesAndSetCategories();\r\n    console.log(\"Workout useeffect\");\r\n  }, []);\r\n  useEffect(() => {\r\n    if (iterChanged == 1) {\r\n      setIter(iter + 1);\r\n    } else if (iterChanged == 0) {\r\n      setIter(iter - 1);\r\n    }\r\n  }, [iterChanged]);\r\n  const [timeCount, tsetTimeCount] = useState();\r\n  return !workOutStarted ? (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n        }}\r\n      >\r\n        <div style={{ flexDirection: \"column\" }}>\r\n          <Headline2>{name}</Headline2>\r\n\r\n          {workoutExercises ? (\r\n            <MarkedList>\r\n              {workoutExercises.map(({ _id, name }, i) => (\r\n                <MarkedItem text={name} style={{ color: primary }}>\r\n                  <IconDone size=\"xs\" color={accent} />\r\n                </MarkedItem>\r\n              ))}\r\n            </MarkedList>\r\n          ) : (\r\n            <Spinner />\r\n          )}\r\n\r\n          <br />\r\n        </div>\r\n        <div style={{ flexDirection: \"column\" }}>\r\n          <Card style={{ width: \"20rem\" }}>\r\n            <CardBody>\r\n              <CardContent>\r\n                <TextBox>\r\n                  <TextBoxBigTitle>Описание</TextBoxBigTitle>\r\n                  {/* <TextBoxSubTitle>10 минут</TextBoxSubTitle> */}\r\n                  <CardParagraph1 style={{ marginTop: \"0.75rem\" }} lines={4}>\r\n                    {description}\r\n                  </CardParagraph1>\r\n                  <TextBoxSubTitle>Подходит для всех</TextBoxSubTitle>\r\n                </TextBox>\r\n                <br />\r\n                <Button\r\n                  onClick={() => {\r\n                    setWorkOutStartet(true);\r\n                  }}\r\n                >\r\n                  Начать\r\n                </Button>\r\n              </CardContent>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  ) : (\r\n    <div>\r\n      {/* <Button\r\n        onClick={() => {\r\n          setWorkOutStartet(false);\r\n        }}\r\n      >\r\n        Закончить\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          history.push(\"/\");\r\n        }}\r\n      >\r\n        На главную\r\n      </Button> */}\r\n\r\n      <Card style={{ marginBottom: \"3rem\" }}>\r\n        <CardBody>\r\n          <CardContent>\r\n            {workoutExercises ? (\r\n              <div>\r\n                {iter == workoutExercises.length ? (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                    }}\r\n                  >\r\n                    <TextBoxBigTitle>Тренировка завершена</TextBoxBigTitle>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                      }}\r\n                    >\r\n                      <div style={{ flexDirection: \"column\" }}>\r\n                        <CardParagraph1>\r\n                          {date.toLocaleString(\"ru\", options)}{\" \"}\r\n                        </CardParagraph1>\r\n                        {/* <TextBoxSubTitle>Время выполнения</TextBoxSubTitle> */}\r\n                      </div>\r\n\r\n                      {workoutExercises ? (\r\n                        <MarkedList>\r\n                          {workoutExercises.map(({ _id, name }, i) => (\r\n                            <MarkedItem text={name} style={{ color: primary }}>\r\n                              <IconDone size=\"xs\" color={accent} />\r\n                            </MarkedItem>\r\n                          ))}\r\n                        </MarkedList>\r\n                      ) : (\r\n                        <Spinner />\r\n                      )}\r\n                    </div>\r\n                    <br />\r\n                    <Button\r\n                      onClick={async () => {\r\n                        await ApiQueries.createProgressAchieve(\r\n                          userId,\r\n                          new Date()\r\n                        );\r\n                        setWorkOutStartet(false);\r\n                        history.push(\"/\");\r\n                      }}\r\n                    >\r\n                      <IconHouse />\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <TextBoxBigTitle>\r\n                        {workoutExercises[iter].name}\r\n                      </TextBoxBigTitle>\r\n                      <div style={{ marginTop: \"0.5rem\" }}>\r\n                        <Timer\r\n                          setIter={setIter}\r\n                          timeCount={{ timeCount: workoutExercises[iter].time }}\r\n                          iter={iter}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        flexDirection: \"row\",\r\n                      }}\r\n                    >\r\n                      <div class=\"wrapper exmp2\">\r\n                        <img src={workoutExercises[iter].photo} />\r\n                      </div>\r\n                      {/* <img\r\n                          style={{\r\n                            width: \"auto\",\r\n                            heigh: \"auto\",\r\n                            maxWidth: \"500px\",\r\n                            borderRadius: \"25px\",\r\n                          }}\r\n                          src=\"https://chslovo.com/wp-content/uploads/2019/03/21-1.jpg\"\r\n                        /> */}\r\n\r\n                      <div style={{ flexDirection: \"column\" }}>\r\n                        <CardParagraph1 lines={5}>\r\n                          {workoutExercises[iter].discription}\r\n                        </CardParagraph1>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            view=\"primary\"\r\n                            size=\"s\"\r\n                            scaleOnInteraction={false}\r\n                            outlined={false}\r\n                            fullWidth\r\n                            disabled={iter == 0}\r\n                            style={{ marginTop: \"1em\", marginRight: \"1em\" }}\r\n                            tabIndex={-1}\r\n                            onClick={() => {\r\n                              console.log(workoutExercises);\r\n                              setIter(iter - 1);\r\n                            }}\r\n                          >\r\n                            Предыдущее\r\n                          </Button>\r\n                          <Button\r\n                            view=\"primary\"\r\n                            size=\"s\"\r\n                            scaleOnInteraction={false}\r\n                            outlined={false}\r\n                            fullWidth\r\n                            style={{ marginTop: \"1em\" }}\r\n                            tabIndex={-1}\r\n                            onClick={() => {\r\n                              setIter(iter + 1);\r\n                            }}\r\n                          >\r\n                            Следующее\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Spinner />\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Workout);\r\n","import { Button, Container } from \"@sberdevices/ui\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Row } from \"@sberdevices/ui/components/Grid/Row\";\r\nimport { Col } from \"@sberdevices/ui/components/Grid/Col\";\r\nimport ApiQueries from \"../ApiQueries\";\r\nimport {\r\n  Spinner,\r\n  Card,\r\n  CardBody,\r\n  CardMedia,\r\n  CardContent,\r\n  TextBoxBigTitle,\r\n  TextBoxBiggerTitle,\r\n  TextBoxSubTitle,\r\n  TextBox,\r\n} from \"@sberdevices/ui\";\r\nimport { Headline2 } from \"@sberdevices/ui/components/Typography\";\r\nimport \"./Workout.css\";\r\n\r\nconst Choose = ({\r\n  setGroupId,\r\n  setDescription,\r\n  setName,\r\n  setWorkouts,\r\n  workouts,\r\n  SendDataToAssistant\r\n}) => {\r\n  const fetchCategoriesAndSetCategories = async () => {\r\n    const workouts = await ApiQueries.getAllGroupsExercises();\r\n    setWorkouts(workouts);\r\n  };\r\n  useEffect(() => {\r\n    fetchCategoriesAndSetCategories();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n        <Headline2>Выберите режим тренировки</Headline2>\r\n      </div>\r\n      <br />\r\n      <Row>\r\n        {workouts.data ? (\r\n          workouts.data.map(({ name, short_discription, discription }, i) => (\r\n            <>\r\n              <Col type=\"calc\" size={1}>\r\n                <Card\r\n                  style={{ width: \"11rem\", marginBottom: \"1rem\" }}\r\n                  tabIndex={-1}\r\n                  scaleOnFocus={true}\r\n                >\r\n                  <CardBody>\r\n                    <CardMedia\r\n                      src=\"./images/320_320_0.jpg\"\r\n                      placeholder=\"./images/320_320_1.jpg\"\r\n                    />\r\n                    <CardContent>\r\n                      <TextBox>\r\n                        <TextBoxBigTitle>{name}</TextBoxBigTitle>\r\n                        <TextBoxSubTitle>{short_discription}</TextBoxSubTitle>\r\n                      </TextBox>\r\n\r\n                      <Link\r\n                        style={{\r\n                          color: \"#FFF\",\r\n                          textDecoration: \"none\",\r\n                        }}\r\n                        to=\"/fastworkout\"\r\n                      >\r\n                        <Button\r\n                          view=\"primary\"\r\n                          size=\"s\"\r\n                          scaleOnInteraction={false}\r\n                          outlined={false}\r\n                          fullWidth\r\n                          style={{ marginTop: \"1em\" }}\r\n                          tabIndex={-1}\r\n                          onClick={() => {\r\n                            console.log(workouts.data);\r\n                            //SendDataToAssistant('chooseCategory')\r\n                            setGroupId(i + 1);\r\n                            setDescription(discription);\r\n                            setName(name);\r\n                          }}\r\n                        >\r\n                          Выбрать\r\n                        </Button>\r\n                      </Link>\r\n                    </CardContent>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </>\r\n          ))\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Choose);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { AssistantCharacterType } from \"@sberdevices/assistant-client\";\r\nimport { darkJoy, darkEva, darkSber } from \"@sberdevices/plasma-tokens/themes\";\r\nimport { text, background, gradient } from \"@sberdevices/plasma-tokens\";\r\nimport { Container } from \"@sberdevices/ui\";\r\n\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport styled from \"styled-components\";\r\nimport { sberBox } from \"@sberdevices/plasma-tokens/typo\";\r\nimport SportCalendar from \"./pages/SportCalendar\";\r\nimport { body1 } from \"@sberdevices/ui/components/Typography\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  HashRouter,\r\n} from \"react-router-dom\";\r\nimport Main from \"./pages/Main\";\r\nimport Workout from \"./pages/Workout\";\r\nimport ApiQueries from \"./ApiQueries\";\r\nimport Choose from \"./pages/Choose\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport {\r\n  createSmartappDebugger,\r\n  createAssistant,\r\n  AssistantAppState,\r\n} from \"@sberdevices/assistant-client\";\r\nimport { set } from \"date-fns\";\r\nimport { Spinner } from \"@sberdevices/ui\";\r\n\r\nconst AppStyled = styled.div`\r\n  padding: 30px;\r\n  ${body1}\r\n`;\r\nconst TypoScale = createGlobalStyle(sberBox);\r\n// const DocStyles = createGlobalStyle`\r\n//     /* stylelint-disable-next-line selector-nested-pattern */\r\n//     html {\r\n//         color: ${text};\r\n//         background-color: ${background};\r\n//         background-image: ${gradient};\r\n//         /** необходимо залить градиентом всю подложку */\r\n//         min-height: 100vh;\r\n//     }\r\n// `;\r\n// const Theme = createGlobalStyle(darkJoy);\r\n//const assistant=null;\r\nconst ThemeBackgroundEva = createGlobalStyle(darkEva);\r\nconst ThemeBackgroundSber = createGlobalStyle(darkSber);\r\nconst ThemeBackgroundJoy = createGlobalStyle(darkJoy);\r\n\r\nconst DocStyles = createGlobalStyle`\r\n  html {\r\n    color: ${text};\r\n    background-color: ${background};\r\n    background-image: ${gradient};\r\n    min-height: 100vh;\r\n  }\r\n`;\r\n\r\nconst initializeAssistant = (getState /*: any*/) => {\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    return createSmartappDebugger({\r\n      token:\r\n        \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTQ1MDY0MzksImV4cCI6MTYxNDU5MjgzOSwidHlwZSI6IkJlYXJlciIsImp0aSI6ImQ1NmIzMjUyLTYyODQtNDJkMy04MDQzLTIxZjlhNjEzMWQ2NyIsInN1YiI6IjdkMTM4N2FhY2RiYjY0ZTMwNTE3ODQ3ZGVhNzgwMDNmMTA4NjE1YmNlZGIzNTlmYjhmNWJiMWVkOGI0OTU3ZmM1MzliZTkyNzAwNDI2Mjk4IiwiYXVkIjoiVlBTIn0.O67QZgv6jRgPfrX_Cya1LGqgidb0gftwvoUiWHSinSAvJcGsC8bK7iwpWoQZQ-JYcBAtnvd7mGVX5Vteuf4y-_EaaWIBr2w-AkWjyuTxvTof9gFBpS71MVIZGCY6VPDW20Ji2Lg0bD0Rby_FRAqqPgYo_r1xeMg6rHNmSSBHJXS8fwee9VOovraThPIAaDbQua_hp_mVy3vNpdXf4Ug1SCa_vDKxSVGsqcJoFgwTMv7xVqtgzWTNOw5BRQuvs5kZd_4UiWFzfKdFbzrryLHaJiF8zgwTG_yxDGuI73366AYYEWeXnnAgdQHFYZwpmm-KGSzSWGNddlRoWwUOk9n_xYgTLQWJxO1b9i2G7MoUuVnsQGwGuwjyPX6ycz6kKUTtKGJM2jg5ssxeY2CYqw-4f0OmwaUgbqeUFnG-FYVV0yihZL8-xGS8D44yEaUnBlAMl2S5w7ZXoScVeO2tTiOQQp0XRNq4QvelLBgAZLb3Xhe_JvjPhRblVfIkPaeTMPT4Wg_YLlbUHJXT2e7TE22oaXDS0mkSXmI505VfKkFpbwd03ohmIdqH-uxsd4GMUr639OZDVAp83zTYLWX812mQKA8aE3jCFoTIRrDZkTryjaR94bdu06QVETJDdfbhW3XQleai90TWe1ePLFTG2xhR8hNkSiYay0-UY7JfMilEP3Y\" ??\r\n        \"\",\r\n      initPhrase: `Запусти Бодрое утро`,\r\n      getState,\r\n    });\r\n  }\r\n  return createAssistant({ getState });\r\n};\r\n\r\nfunction App() {\r\n  const [character, setCharacter] = useState(\"sber\");\r\n\r\n  var assistant = useRef();\r\n  var state = {\r\n    notes: [],\r\n  };\r\n  const [workouts, setWorkouts] = useState([]);\r\n\r\n  const [workoutExercises, setWorkoutExercises] = useState([]);\r\n  const [userId, setUserId] = useState([]);\r\n  const [workOutStarted, setWorkOutStartet] = useState(false);\r\n  const [iterChanged, setIterChanged] = useState(-1);\r\n  const getStateForAssistant = () => {\r\n    console.log(\"getStateForAssistant: this.state:\", state);\r\n    const state_ = {\r\n      item_selector: {\r\n        items: state.notes.map(({ id, title }, index) => ({\r\n          number: index + 1,\r\n          id,\r\n          title,\r\n        })),\r\n      },\r\n    };\r\n    console.log(\"getStateForAssistant: state:\", state);\r\n    return state_;\r\n  };\r\n\r\n  const ChangePage = async (page) => {\r\n    switch (page) {\r\n      case \"Calendar\":\r\n        history.push(\"/calendar\");\r\n        break;\r\n      case \"fastworkout\":\r\n        history.push(\"/calendar\");\r\n        break;\r\n      case \"choose_training\":\r\n        history.push(\"/choose\");\r\n        break;\r\n      case \"fast_training\":\r\n        history.push(\"/fastworkout\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n  const ChooseTrain = async (train_name) => {\r\n    train_name =\r\n      train_name.charAt(0).toUpperCase() + train_name.slice(1).trim();\r\n    console.log(\"WK\", workouts.data);\r\n    if (workouts.data != undefined) {\r\n      workouts.data.map(({ _id, name, discription }, i) => {\r\n        console.log(\"name\", name);\r\n        console.log(\"train_name\", train_name);\r\n        if (train_name == name.trim()) {\r\n          //setWorkOutStartet(false)\r\n          console.log(\"i\", i);\r\n          console.log(\"name\", name);\r\n          setGroupId(i + 1);\r\n          setName(name);\r\n          setDescription(discription);\r\n          history.push(\"/fastworkout\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const startTraining = async () => {\r\n    setWorkOutStartet(true);\r\n    //history.push(\"/fastworkout\");\r\n  };\r\n  const changeExir = async (type) => {\r\n    switch (type) {\r\n      case \"next\":\r\n        setIterChanged(1);\r\n      case \"previous\":\r\n        setIterChanged(0);\r\n    }\r\n\r\n    setIterChanged(-1);\r\n  };\r\n\r\n  const dispatchAssistantAction = async (action) => {\r\n    console.log(\"dispatchAssistantAction\", action);\r\n    if (action) {\r\n      switch (action.type) {\r\n        case \"character\":\r\n          setCharacter(action.character.id);\r\n          // 'sber' | 'eva' | 'joy';\r\n          break;\r\n        case \"show_calendar\":\r\n          ChangePage(\"Calendar\");\r\n          break;\r\n        case \"to_fast_training\":\r\n          ChangePage(\"fast_training\");\r\n          break;\r\n        case \"to_choose_training\":\r\n          ChangePage(\"choose_training\");\r\n          break;\r\n        case \"choose_train\":\r\n          ChooseTrain(action.data);\r\n          break;\r\n        case \"start_train\":\r\n          startTraining();\r\n          break;\r\n\r\n        case \"next_exircise\":\r\n          changeExir(\"next\");\r\n          break;\r\n        case \"previous_exircise\":\r\n          changeExir(\"previous\");\r\n          break;\r\n        case \"to_main\":\r\n          history.push(\"/\");\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (assistant.current == undefined) {\r\n      assistant.current = initializeAssistant(() => getStateForAssistant());\r\n      assistant.current.on(\"start\", (event) => {\r\n        console.log(`assistant.on(start)`, event);\r\n      });\r\n    }\r\n\r\n    assistant.current.on(\r\n      \"data\",\r\n      (event /*: any*/) => {\r\n        if (event.type == \"smart_app_data\") {\r\n          console.log(\"userId\", event.user_id);\r\n          setUserId(event.user_id);\r\n        }\r\n        console.log(`assistant.on(data)`, event);\r\n        const { action } = event;\r\n        dispatchAssistantAction(action);\r\n      },\r\n      []\r\n    );\r\n\r\n    //assistant.sendData({ action: { action_id: 'done', parameters: { title: 'купить хлеб' } } });\r\n\r\n    if (assistant.current != null) {\r\n      console.log(\"Non null, send data\");\r\n      //assistant.sendData({ action: { action_id: 'check_answer'}});\r\n    } else {\r\n      console.log(\"Null\");\r\n    }\r\n  }, [workouts]);\r\n  const [groupId, setGroupId] = useState(2);\r\n  const [description, setDescription] = useState(\r\n    \"Облегченный вид утренней тренирровки позволит вам размять тело без особых силовых усилий\"\r\n  );\r\n  const [name, setName] = useState(\"Быстрая тренировка\");\r\n\r\n  const SendDataToAssistant = async (action) => {\r\n    assistant.current.sendData({\r\n      action: { action_id: action, parameters: { title: \"купить хлеб\" } },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AppStyled>\r\n      <DocStyles />\r\n      <TypoScale />\r\n      {(() => {\r\n        switch (character) {\r\n          case \"sber\":\r\n            return <ThemeBackgroundSber />;\r\n          case \"eva\":\r\n            return <ThemeBackgroundEva />;\r\n          case \"joy\":\r\n            return <ThemeBackgroundJoy />;\r\n          default:\r\n            return;\r\n        }\r\n      })()}\r\n      {/* {assistant.current ? ( */}\r\n      <Switch basename=\"/SberHack\">\r\n        <Route path=\"/choose\">\r\n          <Choose\r\n            setGroupId={setGroupId}\r\n            setDescription={setDescription}\r\n            setName={setName}\r\n            workouts={workouts}\r\n            setWorkouts={setWorkouts}\r\n            SendDataToAssistant={SendDataToAssistant}\r\n          />\r\n        </Route>\r\n        <Route path=\"/fastworkout\">\r\n          <Workout\r\n            groupId={groupId}\r\n            description={description}\r\n            workoutExercises={workoutExercises}\r\n            setWorkoutExercises={setWorkoutExercises}\r\n            name={name}\r\n            userId={userId}\r\n            workOutStarted={workOutStarted}\r\n            setWorkOutStartet={setWorkOutStartet}\r\n            iterChanged={iterChanged}\r\n          />\r\n        </Route>\r\n        <Route path=\"/calendar\" exact>\r\n          <SportCalendar userId={userId} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Main setGroupId={setGroupId} ToChooseCateg={SendDataToAssistant} />\r\n        </Route>\r\n      </Switch>\r\n    </AppStyled>\r\n  );\r\n}\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}